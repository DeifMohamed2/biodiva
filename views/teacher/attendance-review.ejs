<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
  <%- include('./partials/head.ejs') %>
  <style>
    .review-card {
      background: white;
      border-radius: 1rem;
      padding: 2rem;
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
      border: 1px solid #e2e8f0;
      max-width: 800px;
      margin: 0 auto;
    }
    
    .form-group {
      margin-bottom: 1.5rem;
    }
    
    .form-label {
      font-weight: 600;
      color: #374151;
      margin-bottom: 0.5rem;
    }
    
    .form-select, .form-control {
      border: 1px solid #d1d5db;
      border-radius: 0.5rem;
      padding: 0.75rem 1rem;
      transition: all 0.3s ease;
    }
    
    .form-select:focus, .form-control:focus {
      border-color: #3b82f6;
      box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
      outline: none;
    }
    
    .btn-custom {
      padding: 0.75rem 2rem;
      border-radius: 0.5rem;
      font-weight: 600;
      transition: all 0.3s ease;
      border: none;
      cursor: pointer;
    }
    
    .btn-primary-custom {
      background: #3b82f6;
      color: white;
    }
    
    .btn-primary-custom:hover {
      background: #2563eb;
    }
    
    .btn-secondary-custom {
      background: #6b7280;
      color: white;
    }
    
    .btn-secondary-custom:hover {
      background: #4b5563;
    }
    
    .btn-success-custom {
      background: #10b981;
      color: white;
    }
    
    .btn-success-custom:hover {
      background: #059669;
    }
    
    .spinner {
      width: 40px;
      height: 40px;
      border: 4px solid #f3f4f6;
      border-top: 4px solid #3b82f6;
      border-radius: 50%;
      animation: spin 1s linear infinite;
      margin: auto;
    }
    
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
    
    .alert {
      padding: 1rem;
      border-radius: 0.5rem;
      margin: 1rem 0;
    }
    
    .alert-success {
      background-color: #f0fdf4;
      border: 1px solid #bbf7d0;
      color: #16a34a;
    }
    
    .alert-danger {
      background-color: #fef2f2;
      border: 1px solid #fecaca;
      color: #dc2626;
    }
    
    .alert-info {
      background-color: #eff6ff;
      border: 1px solid #bfdbfe;
      color: #1d4ed8;
    }
    
    .results-section {
      margin-top: 2rem;
      padding-top: 2rem;
      border-top: 1px solid #e2e8f0;
    }
    
    .attendance-details {
      background: #f8fafc;
      border-radius: 0.5rem;
      padding: 1.5rem;
      margin: 1rem 0;
    }
    
    /* Enhanced Card Styling */
    .enhanced-card {
      border: 1px solid #e3e6f0;
      box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
      transition: all 0.3s ease;
    }
    
    .enhanced-card:hover {
      box-shadow: 0 0.25rem 2rem 0 rgba(58, 59, 69, 0.2);
      transform: translateY(-2px);
    }
    
    .card-header-enhanced {
      background: linear-gradient(135deg, #f8f9fc 0%, #f1f3f6 100%);
      border-bottom: 2px solid #e3e6f0;
      padding: 1.5rem;
      /* margin: -1.5rem -1.5rem 1.5rem -1.5rem; */
      border-radius: 0.5rem 0.5rem 0 0;
    }
    
    .card-body-enhanced {
      padding: 0;
    }
    
    /* Enhanced Table Styling */
    .enhanced-table {
      border: 1px solid #e3e6f0;
      border-radius: 0.5rem;
      overflow: hidden;
    }
    
    .enhanced-table thead th {
      background: #5a5c69;
      color: white;
      font-weight: 700;
      text-transform: uppercase;
      font-size: 0.85rem;
      letter-spacing: 0.5px;
      padding: 1rem 0.75rem;
      border: none;
    }
    
    .enhanced-table tbody td {
      padding: 1rem 0.75rem;
      vertical-align: middle;
      border-bottom: 1px solid #f8f9fc;
      font-weight: 600;
    }
    
    .enhanced-table tbody tr:hover {
      background-color: #f8f9fc;
      transform: scale(1.01);
      transition: all 0.2s ease;
    }
    
    .enhanced-table tbody tr:last-child td {
      border-bottom: none;
    }
    
    /* Avatar Enhancement */
    .avatar-sm {
      width: 40px;
      height: 40px;
      font-size: 16px;
      font-weight: 700;
    }
    
    /* Badge Enhancement */
    .badge {
      font-size: 0.8rem;
      padding: 0.5rem 0.75rem;
      font-weight: 700;
    }
  </style>
</head>
<body>
  <div class="teacher-container">
    <!-- Sidebar -->
    <%- include('./partials/nav.ejs') %>
    
    <!-- Main Content -->
    <main class="teacher-main">
      <!-- Header -->
      <%- include('./partials/top.ejs') %>
      
      <!-- Content -->
      <div class="teacher-content">
        <!-- Search Card -->
        <div class="review-card">
        <div class="text-center mb-4">
          <h1 class="display-6 fw-bold text-primary mb-3">
            <i class="fas fa-search"></i>
            مراجعة الحضور
          </h1>
          <p class="lead text-muted">البحث عن سجلات الحضور ومراجعتها</p>
        </div>
        
        <form id="reviewAttendanceForm">
          <div class="row">
            <div class="col-md-6">
              <div class="form-group">
                <label for="Grade" class="form-label">الصف الدراسي</label>
                <select name="Grade" id="Grade" class="form-select">
                  <option value="">جميع الصفوف</option>
                  <option value="Grade1">الصف الأول الثانوي</option>
                  <option value="Grade2">الصف الثاني الثانوي</option>
                  <option value="Grade3">الصف الثالث الثانوي</option>
                </select>
              </div>
            </div>
            
            <div class="col-md-6">
              <div class="form-group">
                <label for="CenterName" class="form-label">اسم السنتر</label>
                <select name="CenterName" id="CenterName" class="form-select">
                  <option value="">جميع السنترات</option>
                  <option value="centerBasmala">البسمله</option>
                  <option value="centerDHL">DHL</option>
                  <option value="centerDarElsa3da">دار السعاده</option>
                  <option value="centerFutureSoft">Future Soft</option>
                  <option value="centerInfinity">Infinity</option>
                  <option value="centerElra3y">الراعي</option>
                  <option value="centerNewFuture">New Future</option>
                  <option value="centerHarverd">هارفرد</option>
                  <option value="centerA1">A1</option>
                </select>
              </div>
            </div>
          </div>
          
          <div class="row">
            <div class="col-md-6">
              <div class="form-group">
                <label for="GroupTime" class="form-label">المجموعة</label>
                <select name="GroupTime" id="GroupTime" class="form-select">
                  <option value="">جميع المجموعات</option>
                </select>
              </div>
            </div>
            
            <div class="col-md-6">
              <div class="form-group">
                <label for="Date" class="form-label">التاريخ</label>
                <input type="date" name="Date" id="Date" class="form-control">
              </div>
            </div>
          </div>
          
          <div class="spinner d-none" id="spinner"></div>
          
          <div class="alert alert-success d-none" id="successAlert">
            <i class="fas fa-check-circle"></i>
            <span id="successMessage"></span>
          </div>
          
          <div class="alert alert-danger d-none" id="errorAlert">
            <i class="fas fa-exclamation-circle"></i>
            <span id="errorMessage"></span>
          </div>
          
          <div class="alert alert-info d-none" id="infoAlert">
            <i class="fas fa-info-circle"></i>
            <span id="infoMessage"></span>
          </div>
          
          <div class="text-center mt-4">
            <button type="submit" class="btn btn-primary-custom me-3">
              <i class="fas fa-search"></i>
              البحث عن الحضور
            </button>
            <a href="/teacher/attendance" class="btn btn-secondary-custom">
              <i class="fas fa-arrow-right"></i>
              العودة للقائمة
            </a>
          </div>
        </form>
        </div>
        
        <!-- Results Section -->
        <div class="results-section d-none" id="resultsSection">
          <div class="attendance-details" id="attendanceDetails">
            <!-- Attendance details will be populated here -->
          </div>
          
          <div class="text-center mt-3">
            <button type="button" class="btn btn-success-custom me-2" id="exportBtn">
              <i class="fas fa-download"></i>
              تصدير التقرير
            </button>
            <button type="button" class="btn btn-primary-custom" id="manageBtn">
              <i class="fas fa-edit"></i>
              إدارة الحضور
            </button>
          </div>
        </div>
      </div>
    </main>
  </div>

  <script>
    // Group times configuration
    const groupTimes = {
      centerBasmala: [
        { value: 'group1', text: 'السبت - 10 - 12' },
        { value: 'group2', text: 'السبت - 12 - 2' }
      ],
      centerDHL: [
        { value: 'group1', text: 'السبت - 3 - 5' },
        { value: 'group2', text: 'السبت - 5 - 7' }
      ],
      centerDarElsa3da: [
        { value: 'group1', text: 'الأحد - 3:30 - 5:30' },
        { value: 'group2', text: 'الاثنين - 5 - 7' }
      ],
      centerFutureSoft: [
        { value: 'group1', text: 'الأحد - 6 - 8' },
        { value: 'group2', text: 'الخميس - 7 - 9' }
      ],
      centerInfinity: [
        { value: 'group1', text: 'الاثنين - 7 - 9' }
      ],
      centerElra3y: [
        { value: 'group1', text: 'الثلاثاء - 3 - 5' },
        { value: 'group2', text: 'الأربعاء - 5:30 - 7:30' },
        { value: 'group3', text: 'الأربعاء - 7:30 - 9:30' }
      ],
      centerNewFuture: [
        { value: 'group1', text: 'الثلاثاء - 5 - 7' },
        { value: 'group2', text: 'الثلاثاء - 7 - 9' }
      ],
      centerHarverd: [
        { value: 'group1', text: 'الخميس - 3 - 5' },
        { value: 'group2', text: 'الخميس - 5 - 7' }
      ],
      centerA1: [
        { value: 'group1', text: 'الجمعة - 3 - 5' },
        { value: 'group2', text: 'الجمعة - 5 - 7' }
      ]
    };

    // DOM elements
    const centerName = document.getElementById('CenterName');
    const groupTime = document.getElementById('GroupTime');
    const reviewForm = document.getElementById('reviewAttendanceForm');
    const spinner = document.getElementById('spinner');
    const successAlert = document.getElementById('successAlert');
    const errorAlert = document.getElementById('errorAlert');
    const infoAlert = document.getElementById('infoAlert');
    const successMessage = document.getElementById('successMessage');
    const errorMessage = document.getElementById('errorMessage');
    const infoMessage = document.getElementById('infoMessage');
    const resultsSection = document.getElementById('resultsSection');
    const attendanceDetails = document.getElementById('attendanceDetails');
    const exportBtn = document.getElementById('exportBtn');
    const manageBtn = document.getElementById('manageBtn');

    let currentAttendanceData = null;
    let allStudents = [];

    // Handle center name change
    centerName.addEventListener('change', function() {
      const selectedCenter = this.value;
      groupTime.innerHTML = '<option value="">جميع المجموعات</option>';
      
      if (groupTimes[selectedCenter]) {
        groupTimes[selectedCenter].forEach(group => {
          const option = document.createElement('option');
          option.value = group.value;
          option.textContent = group.text;
          groupTime.appendChild(option);
        });
      }
    });

    // Form submission for search
    reviewForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const formData = new FormData(reviewForm);
      const searchData = {
        Grade: formData.get('Grade'),
        CenterName: formData.get('CenterName'),
        GroupTime: formData.get('GroupTime'),
        Date: formData.get('Date')
      };
      
      // Show spinner and hide alerts
      spinner.classList.remove('d-none');
      successAlert.classList.add('d-none');
      errorAlert.classList.add('d-none');
      infoAlert.classList.add('d-none');
      resultsSection.classList.add('d-none');
      
      try {
        const response = await fetch('/teacher/attendance/review', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(searchData)
        });
        
        const result = await response.json();
        
        if (response.ok) {
          if (result.attendance) {
            currentAttendanceData = result.attendance;
            allStudents = result.attendance.Students || [];
            displayAttendanceDetails(result.attendance);
            resultsSection.classList.remove('d-none');
            successMessage.textContent = 'تم العثور على سجل الحضور بنجاح';
            successAlert.classList.remove('d-none');
          } else {
            infoMessage.textContent = 'لم يتم العثور على سجل حضور بهذه المعايير';
            infoAlert.classList.remove('d-none');
          }
        } else {
          errorMessage.textContent = result.message;
          errorAlert.classList.remove('d-none');
        }
      } catch (error) {
        errorMessage.textContent = 'حدث خطأ في الشبكة';
        errorAlert.classList.remove('d-none');
      } finally {
        spinner.classList.add('d-none');
      }
    });

    // Display attendance details
    function displayAttendanceDetails(attendance) {
      const gradeText = attendance.Grade === 'Grade1' ? 'الصف الأول الثانوي' : 
                       attendance.Grade === 'Grade2' ? 'الصف الثاني الثانوي' : 'الصف الثالث الثانوي';
      
      const centerText = attendance.CenterName.replace('center', '');
      
      let studentsTableHtml = '';
      if (attendance.Students && attendance.Students.length > 0) {
        attendance.Students.forEach((student, index) => {
          const studentName = student.Username && student.Username.includes('@') ? 
                             student.Username.split('@')[0] : student.Username;
          const initials = studentName ? studentName.charAt(0).toUpperCase() : 'ط';
          
          // Get grade display text
          const gradeText = student.Grade === 'Grade1' ? 'الأول' : 
                           student.Grade === 'Grade2' ? 'الثاني' : 
                           student.Grade === 'Grade3' ? 'الثالث' : student.Grade;
          
          studentsTableHtml += `
            <tr>
              <td class="text-center fw-bold text-dark">${index + 1}</td>
              <td>
                <div class="d-flex align-items-center">
                  <div class="avatar-sm bg-primary text-white rounded-circle me-3 d-flex align-items-center justify-content-center fw-bold">
                    ${initials}
                  </div>
                  <span class="fw-bold text-dark fs-6">${studentName}</span>
                </div>
              </td>
              <td class="text-center">
                <span class="badge bg-primary fs-6 px-3 py-2 fw-bold">${student.Code || 'غير محدد'}</span>
              </td>
              <td class="text-center fw-bold text-dark">${student.phone || 'غير محدد'}</td>
              <td class="text-center fw-bold text-dark">${student.parentPhone || 'غير محدد'}</td>
              <td class="text-center">
                <span class="badge bg-info fs-6 px-3 py-2 fw-bold">${gradeText}</span>
              </td>
              <td class="text-center">
                <span class="badge bg-success">حاضر</span>
              </td>
            </tr>
          `;
        });
      } else {
        studentsTableHtml = `
          <tr>
            <td colspan="7" class="text-center text-muted py-5">
              <i class="fas fa-users fa-3x mb-3 text-muted"></i>
              <div class="fs-5">لا يوجد طلاب حاضرين</div>
              <div class="text-muted">لم يتم تسجيل أي طالب في هذا اليوم</div>
            </td>
          </tr>
        `;
      }

      attendanceDetails.innerHTML = `
        <div class="row mb-3">
          <div class="col-md-3">
            <strong>التاريخ:</strong> ${attendance.Date}
          </div>
          <div class="col-md-3">
            <strong>الصف:</strong> ${gradeText}
          </div>
          <div class="col-md-3">
            <strong>السنتر:</strong> ${centerText}
          </div>
          <div class="col-md-3">
            <strong>المجموعة:</strong> ${attendance.GroupTime}
          </div>
        </div>
        <div class="row mb-3">
          <div class="col-md-6">
            <strong>عدد الطلاب الحاضرين:</strong> ${attendance.Students ? attendance.Students.length : 0}
          </div>
          <div class="col-md-6">
            <strong>المعلم المسؤول:</strong> ${attendance.createdBy ? attendance.createdBy.Username : 'غير محدد'} 
            ${attendance.createdBy && attendance.createdBy.phone ? `(${attendance.createdBy.phone})` : ''}
          </div>
        </div>
        <div class="attendance-card enhanced-card">
          <div class="card-header-enhanced">
            <div class="d-flex justify-content-between align-items-center">
              <h3 class="mb-0">
                <i class="fas fa-users text-primary"></i>
                قائمة الطلاب الحاضرين
              </h3>
              <span class="badge bg-primary fs-6 px-3 py-2">${attendance.Students ? attendance.Students.length : 0} طالب</span>
            </div>
            <div class="mt-3">
              <div class="row">
                <div class="col-md-6">
                  <div class="input-group">
                    <span class="input-group-text">
                      <i class="fas fa-search"></i>
                    </span>
                    <input type="text" class="form-control" id="studentSearch" placeholder="البحث بالاسم أو الكود...">
                  </div>
                </div>
                <div class="col-md-6">
                  <button type="button" class="btn btn-outline-secondary" id="clearSearch">
                    <i class="fas fa-times"></i>
                    مسح البحث
                  </button>
                </div>
              </div>
            </div>
          </div>
          
          <div class="card-body-enhanced">
            <div class="table-responsive">
              <table class="table table-hover enhanced-table">
                <thead class="table-dark">
                  <tr>
                    <th width="5%" class="text-center">#</th>
                    <th width="20%">اسم الطالب</th>
                    <th width="12%" class="text-center">كود الطالب</th>
                    <th width="18%" class="text-center">رقم الهاتف</th>
                    <th width="18%" class="text-center">رقم ولي الأمر</th>
                    <th width="12%" class="text-center">الصف</th>
                    <th width="15%" class="text-center">الحالة</th>
                  </tr>
                </thead>
                <tbody>
                  ${studentsTableHtml}
                </tbody>
              </table>
            </div>
          </div>
        </div>
      `;
    }

    // Export button handler
    exportBtn.addEventListener('click', async () => {
      if (!currentAttendanceData) return;
      
      try {
        const response = await fetch('/teacher/attendance/export', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            attendanceId: currentAttendanceData._id
          })
        });
        
        if (response.ok) {
          const blob = await response.blob();
          const url = window.URL.createObjectURL(blob);
          const a = document.createElement('a');
          a.href = url;
          a.download = `attendance_${currentAttendanceData.Date}.xlsx`;
          document.body.appendChild(a);
          a.click();
          window.URL.revokeObjectURL(url);
          document.body.removeChild(a);
          
          successMessage.textContent = 'تم تصدير التقرير بنجاح';
          successAlert.classList.remove('d-none');
        } else {
          errorMessage.textContent = 'حدث خطأ في تصدير التقرير';
          errorAlert.classList.remove('d-none');
        }
      } catch (error) {
        errorMessage.textContent = 'حدث خطأ في الشبكة';
        errorAlert.classList.remove('d-none');
      }
    });

    // Manage button handler
    manageBtn.addEventListener('click', () => {
      if (!currentAttendanceData) return;
      
      const params = new URLSearchParams({
        Grade: currentAttendanceData.Grade,
        CenterName: currentAttendanceData.CenterName,
        GroupTime: currentAttendanceData.GroupTime,
        Date: currentAttendanceData.Date
      });
      
      window.location.href = `/teacher/attendance/manage?${params.toString()}`;
    });

    // Check for URL parameters to pre-fill form
    window.addEventListener('DOMContentLoaded', () => {
      const urlParams = new URLSearchParams(window.location.search);
      const grade = urlParams.get('Grade');
      const center = urlParams.get('CenterName');
      const group = urlParams.get('GroupTime');
      const date = urlParams.get('Date');
      
      if (grade) document.getElementById('Grade').value = grade;
      if (center) {
        document.getElementById('CenterName').value = center;
        // Trigger change event to populate groups
        centerName.dispatchEvent(new Event('change'));
        if (group) document.getElementById('GroupTime').value = group;
      }
      if (date) document.getElementById('Date').value = date;
      
      // Auto-search if all parameters are provided
      if (grade && center && group && date) {
        reviewForm.dispatchEvent(new Event('submit'));
      }
    });

    // Search functionality
    function filterStudents(searchTerm) {
      if (!searchTerm || searchTerm.trim() === '') {
        return allStudents;
      }
      
      const term = searchTerm.toLowerCase().trim();
      return allStudents.filter(student => {
        const studentName = student.Username && student.Username.includes('@') ? 
                           student.Username.split('@')[0] : student.Username;
        const name = studentName ? studentName.toLowerCase() : '';
        const code = student.Code ? student.Code.toString() : '';
        
        return name.includes(term) || code.includes(term);
      });
    }

    function updateStudentsTable(students) {
      const gradeText = currentAttendanceData.Grade === 'Grade1' ? 'الصف الأول الثانوي' : 
                       currentAttendanceData.Grade === 'Grade2' ? 'الصف الثاني الثانوي' : 'الصف الثالث الثانوي';
      
      const centerText = currentAttendanceData.CenterName.replace('center', '');
      
      let studentsTableHtml = '';
      if (students && students.length > 0) {
        students.forEach((student, index) => {
          const studentName = student.Username && student.Username.includes('@') ? 
                             student.Username.split('@')[0] : student.Username;
          const initials = studentName ? studentName.charAt(0).toUpperCase() : 'ط';
          
          // Get grade display text
          const gradeText = student.Grade === 'Grade1' ? 'الأول' : 
                           student.Grade === 'Grade2' ? 'الثاني' : 
                           student.Grade === 'Grade3' ? 'الثالث' : student.Grade;
          
          studentsTableHtml += `
            <tr>
              <td class="text-center fw-bold text-dark">${index + 1}</td>
              <td>
                <div class="d-flex align-items-center">
                  <div class="avatar-sm bg-primary text-white rounded-circle me-3 d-flex align-items-center justify-content-center fw-bold">
                    ${initials}
                  </div>
                  <span class="fw-bold text-dark fs-6">${studentName}</span>
                </div>
              </td>
              <td class="text-center">
                <span class="badge bg-primary fs-6 px-3 py-2 fw-bold">${student.Code || 'غير محدد'}</span>
              </td>
              <td class="text-center fw-bold text-dark">${student.phone || 'غير محدد'}</td>
              <td class="text-center fw-bold text-dark">${student.parentPhone || 'غير محدد'}</td>
              <td class="text-center">
                <span class="badge bg-info fs-6 px-3 py-2 fw-bold">${gradeText}</span>
              </td>
              <td class="text-center">
                <span class="badge bg-success">حاضر</span>
              </td>
            </tr>
          `;
        });
      } else {
        studentsTableHtml = `
          <tr>
            <td colspan="7" class="text-center text-muted py-5">
              <i class="fas fa-search fa-3x mb-3 text-muted"></i>
              <div class="fs-5">لا توجد نتائج للبحث</div>
              <div class="text-muted">جرب البحث بكلمات مختلفة</div>
            </td>
          </tr>
        `;
      }

      // Update the table body
      const tableBody = document.querySelector('#resultsSection tbody');
      if (tableBody) {
        tableBody.innerHTML = studentsTableHtml;
      }
    }

    // Add search event listeners
    document.addEventListener('DOMContentLoaded', function() {
      const studentSearch = document.getElementById('studentSearch');
      const clearSearch = document.getElementById('clearSearch');
      
      if (studentSearch) {
        studentSearch.addEventListener('input', function() {
          const searchTerm = this.value;
          const filteredStudents = filterStudents(searchTerm);
          updateStudentsTable(filteredStudents);
        });
      }
      
      if (clearSearch) {
        clearSearch.addEventListener('click', function() {
          if (studentSearch) {
            studentSearch.value = '';
            updateStudentsTable(allStudents);
          }
        });
      }
    });
  </script>
</body>
</html>
